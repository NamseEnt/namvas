var N=Object.defineProperty;var g=(n,t)=>()=>(n&&(t=n(n=0)),t);var C=(n,t)=>{for(var e in t)N(n,e,{get:t[e],enumerable:!0})};var y={};C(y,{LocalDBDocument:()=>d});import{GetCommand as A,PutCommand as O}from"@aws-sdk/lib-dynamodb";import h from"bun:sqlite";var d,T=g(()=>{d=class{db=new h("db.sqlite");async get(t){this.db.exec(`CREATE TABLE IF NOT EXISTS ${t.TableName} (
          pk TEXT NOT NULL,
          sk TEXT NOT NULL,
          data TEXT,
          PRIMARY KEY (pk, sk)
        )`);let e=t.Key.$p,o=t.Key.$s||"_",s=this.db.query(`SELECT data FROM ${t.TableName} WHERE pk = ? AND sk = ?`).get(e,o);if(!s)return{Item:void 0};let r=s.data?JSON.parse(s.data):{};return{Item:{$p:e,$s:o,...r}}}async put(t){this.db.exec(`CREATE TABLE IF NOT EXISTS ${t.TableName} (
          pk TEXT NOT NULL,
          sk TEXT NOT NULL,
          data TEXT,
          PRIMARY KEY (pk, sk)
        )`);let e=t.Item,o=e.$p,s=e.$s||"_",{$p:r,$s:a,...i}=e;this.db.query(`INSERT OR REPLACE INTO ${t.TableName} (pk, sk, data) VALUES (?, ?, ?)`).run(o,s,JSON.stringify(i))}async send(t){if(this.db.exec(`CREATE TABLE IF NOT EXISTS ${t.input.TableName} (
          pk TEXT NOT NULL,
          sk TEXT NOT NULL,
          data TEXT,
          PRIMARY KEY (pk, sk)
        )`),t instanceof A){let e=t.input.Key.$p,o=t.input.Key.$s||"_",s=this.db.query(`SELECT data FROM ${t.input.TableName} WHERE pk = ? AND sk = ?`).get(e,o);if(!s)return{Item:void 0};let r=s.data?JSON.parse(s.data):{};return{Item:{$p:e,$s:o,...r}}}if(t instanceof O){let e=t.input.Item,o=e.$p,s=e.$s||"_",{$p:r,$s:a,...i}=e;return this.db.query(`INSERT OR REPLACE INTO ${t.input.TableName} (pk, sk, data) VALUES (?, ?, ?)`).run(o,s,JSON.stringify(i)),{}}throw new Error(`Not implemented: ${t.constructor.name}`)}}});import{DynamoDBDocument as b}from"@aws-sdk/lib-dynamodb";import{DynamoDBClient as I}from"@aws-sdk/client-dynamodb";async function u({id:n}){return(await m.get({TableName:"main",Key:{$p:`session/id=${n}`,$s:"_"}})).Item}var f;if(!process.env.LAMBDA)try{({LocalDBDocument:f}=await Promise.resolve().then(()=>(T(),y)))}catch{console.warn("LocalDBDocument not available in this environment")}var m=process.env.LAMBDA?b.from(new I):new f;var E=async(n,t)=>{try{let e=t.cookies.get("sessionId")||"temporary-session-id",o=await u({id:e});return o?{ok:!0,tosAgreed:o.tosAgreed||!1}:{ok:!1,reason:"NOT_LOGGED_IN"}}catch{return{ok:!1,reason:"NOT_LOGGED_IN"}}};var p={getMe:E};var H=async(n,t)=>{try{if(n.httpMethod&&n.path){let e=n.path.slice(1);if(n.httpMethod==="GET"&&e==="health")return{statusCode:200,headers:{"Content-Type":"text/plain","Access-Control-Allow-Origin":"*"},body:"OK"};if(n.httpMethod==="POST"&&Object.keys(p).includes(e)){let o={};if(n.body)try{o=JSON.parse(n.body)}catch{o={}}let s=p[e];if(!s)return{statusCode:404,headers:{"Content-Type":"application/json","Access-Control-Allow-Origin":"*"},body:JSON.stringify({error:"Handler not found"})};let r=new Map;n.headers?.Cookie&&n.headers.Cookie.split(";").forEach(i=>{let[c,l]=i.trim().split("=");c&&l&&r.set(c,l)});let a=await s(o,{cookies:r});return{statusCode:200,headers:{"Content-Type":"application/json","Access-Control-Allow-Origin":"*","Access-Control-Allow-Methods":"POST, GET, OPTIONS","Access-Control-Allow-Headers":"Content-Type"},body:JSON.stringify(a)}}return n.httpMethod==="OPTIONS"?{statusCode:200,headers:{"Access-Control-Allow-Origin":"*","Access-Control-Allow-Methods":"POST, GET, OPTIONS","Access-Control-Allow-Headers":"Content-Type"},body:""}:{statusCode:404,headers:{"Content-Type":"application/json","Access-Control-Allow-Origin":"*"},body:JSON.stringify({error:"Not Found"})}}return console.log("Non-HTTP event received:",n),{statusCode:200,body:JSON.stringify({message:"Event processed"})}}catch(e){return console.error("Lambda Error:",e),{statusCode:500,headers:{"Content-Type":"application/json","Access-Control-Allow-Origin":"*"},body:JSON.stringify({error:"Internal Server Error"})}}};export{H as handler};
