#!/usr/bin/env bun

import { writeFileSync } from "fs";
import { parseTypeScriptSchema } from "./typescript-type-parser.js";
import { generateSchemaCRUD } from "./schema-crud-generator.js";

async function main() {
  const args = process.argv.slice(2);

  if (args.length === 0) {
    console.log("Usage: bun run schema <input-file.ts> [output-file]");
    console.log("Example: bun run schema schema.ts generated.ts");
    process.exit(1);
  }

  const inputFile = args[0];
  const outputFile = args[1] || inputFile.replace(/\.ts$/, ".generated.ts");

  // Validate input file extension
  if (!inputFile.endsWith(".ts")) {
    console.error("❌ Input file must be a TypeScript file (.ts)");
    process.exit(1);
  }

  try {
    const schema = parseTypeScriptSchema(inputFile);

    if (schema.documents.size === 0) {
      process.exit(0);
    }

    const crudCode = generateSchemaCRUD(schema);

    // Combine everything
    const fullOutput = `// Auto-generated schema and CRUD functions
// Generated from: ${inputFile}
// Do not edit this file directly

${crudCode}
`;

    writeFileSync(outputFile, fullOutput);
  } catch (error) {
    console.error("❌ Error:", error instanceof Error ? error.message : error);
    process.exit(1);
  }
}

if ((import.meta as any).main) {
  main();
}
