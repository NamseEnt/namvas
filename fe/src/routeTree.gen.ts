/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { Route as rootRouteImport } from './routes/__root'
import { Route as TermsAgreementRouteImport } from './routes/terms-agreement'
import { Route as IndexRouteImport } from './routes/index'
import { Route as StudioIndexRouteImport } from './routes/studio/index'

const TermsAgreementRoute = TermsAgreementRouteImport.update({
  id: '/terms-agreement',
  path: '/terms-agreement',
  getParentRoute: () => rootRouteImport,
} as any)
const IndexRoute = IndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRouteImport,
} as any)
const StudioIndexRoute = StudioIndexRouteImport.update({
  id: '/studio/',
  path: '/studio/',
  getParentRoute: () => rootRouteImport,
} as any)

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '/terms-agreement': typeof TermsAgreementRoute
  '/studio': typeof StudioIndexRoute
}
export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '/terms-agreement': typeof TermsAgreementRoute
  '/studio': typeof StudioIndexRoute
}
export interface FileRoutesById {
  __root__: typeof rootRouteImport
  '/': typeof IndexRoute
  '/terms-agreement': typeof TermsAgreementRoute
  '/studio/': typeof StudioIndexRoute
}
export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths: '/' | '/terms-agreement' | '/studio'
  fileRoutesByTo: FileRoutesByTo
  to: '/' | '/terms-agreement' | '/studio'
  id: '__root__' | '/' | '/terms-agreement' | '/studio/'
  fileRoutesById: FileRoutesById
}
export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  TermsAgreementRoute: typeof TermsAgreementRoute
  StudioIndexRoute: typeof StudioIndexRoute
}

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/terms-agreement': {
      id: '/terms-agreement'
      path: '/terms-agreement'
      fullPath: '/terms-agreement'
      preLoaderRoute: typeof TermsAgreementRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/studio/': {
      id: '/studio/'
      path: '/studio'
      fullPath: '/studio'
      preLoaderRoute: typeof StudioIndexRouteImport
      parentRoute: typeof rootRouteImport
    }
  }
}

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  TermsAgreementRoute: TermsAgreementRoute,
  StudioIndexRoute: StudioIndexRoute,
}
export const routeTree = rootRouteImport
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()
